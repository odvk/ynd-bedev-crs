# 1. Словари

# Когда запрашивают в словаре значение, соответствующее определённому ключу, это называется «доступ по ключу». Так можно получить значение для какого-нибудь ключа и заменить его:


english = {
    'рука': 'hand',
    'нога': 'leg',
    'бэкенд-разработчик': 'back-end developer'
}

# доступ по ключу: как по-английски рука?
print(english['рука'])  # будет напечатано слово hand

english['рука'] = 'arm'
# значение для ключа 'рука' поменялось с 'hand' на 'arm' - другой допустимый перевод

print('-------------')

# Ключи в словаре похожи на индексы списков. Только индексами выступают натуральные числа, а ключами бывают и числа обоих типов, и строки, и даже булевы значения True и False:
garden = {
    'земляника': 'ягода',
    'яблоко': 'фрукт',
    'лук': ['овощ', 'оружие']  # значением может быть список
}

print(garden['лук'])
# будет напечатано ['овощ', 'оружие']

garden = {
    'земляника': 'ягода',
    'яблоко': 'фрукт',
#    ['морковь', 'кабачок']: 'овощ'  # а так нельзя! ключом список быть не может
}

# print(garden[['морковь', 'кабачок']])  # получится ошибка

print('-------------')
# 1) получаем ключи словаря
favorite_songs = {
    'Тополиный пух': 'Иванушки international',
    'Город золотой': 'Аквариум',
    'Звезда по имени Солнце': 'Кино'
}

print(favorite_songs.keys())
# будет напечатан список песен
# dict_keys(['Тополиный пух', 'Город золотой', 'Звезда по имени Солнце'])

# 2) получаем значения словаря
old_letters = {'ять': 'Ѣ', 'юс малый': 'Ѧ', 'юс большой': 'Ѫ'}

print(old_letters.values())
# будет напечатан список начертаний старинных букв
# dict_values(['Ѣ', 'Ѧ', 'Ѫ'])

print('-------------')
# Чтобы такие списки использовать в коде, их обычно превращают в строки методом join():

# словарь отчеств
patronymic = {'Илья': 'Ильич', 'Иван': 'Ивановна', 'Пётр': 'Петровна'}
print(", ".join(patronymic.values()))
# выводится строка: Ильич, Ивановна, Петровна



